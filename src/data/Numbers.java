package data;

public class Numbers {
	public static String[] mSmallArr = { "0", "1", "2", "3", "4"};
	public static String[] mBigArr = { "5", "6", "7", "8", "9"};
	public static String[] mJiArr = { "1", "3", "5", "7", "9"};
	public static String[] mOuArr = { "0", "2", "4", "6", "8"};
	public static String[] mZhiArr = { "1", "2", "3", "5", "7"};
	public static String[] mHeArr = { "0", "4", "6", "8", "9"};

	//制定删除位
	public static String[][] mDeleteNumbers = {  {"4"},
		 										 {"7"},
		 										 {""},
		 										 {""},
		 										 {""}
		 										 };

	//不能同时出现的数字
	public static String [][] mDeleteGroups = { {"", "", "" ,"", "" }
	};

	//过滤历史数字
	public static String[] mDeleteHistories= {
		"72102",
		"57191",
		"12347",
		"69632",
		"42772",
		"90157",
		"60488",
		"01107",
		"47278",
		"91436",
		"01622",
		"25636",
		"66613",
		"07155",
		"85067",
		"02622",
		"30275",
		"35053",
		"82936",
		"58355",
		"51477",
		"41562",
		"51139",
		"88745",
		"46674",
		"45491",
		"62267",
		"66555",
		"20303",
		"03678",
		"50832",
		"35444",
		"71159",
		"73171",
		"24681",
		"91700",
		"69123",
		"31606",
		"05327",
		"73427",
		"89993",
		"93158",
		"29283",
		"42082",
		"36094",
		"83154",
		"60601",
		"72070",
		"69984",
		"62906",
		"89841",
	};
	
	public static String DATA = "001 006 010 011 012 013 014 015 016 018 019 021 026 031 036 041 046 051 056 060 061 062 063 064 065 066 068 069 078 079 081 086 087 091 096 097 100 101 102 103 104 105 106 108 109 110 111 112 113 114 115 116 117 119 120 121 122 123 124 125 126 127 129 130 131 132 133 134 135 136 137 139 140 141 142 143 144 145 146 147 149 150 151 152 153 154 155 156 157 159 160 161 162 163 164 165 166 167 169 171 172 173 174 175 176 177 179 180 189 190 191 192 193 194 195 196 197 198 199 201 206 210 211 212 213 214 215 216 217 219 221 226 227 231 236 237 241 246 247 251 256 257 260 261 262 263 264 265 266 267 268 271 272 273 274 275 276 277 278 286 287 291 301 306 310 311 312 313 314 315 316 317 319 321 326 327 331 336 337 341 346 347 351 356 357 360 361 362 363 364 365 366 367 368 369 371 372 373 374 375 376 377 378 379 386 387 391 396 397 401 406 410 411 412 413 414 415 416 417 419 421 426 427 431 436 437 441 446 447 451 456 457 460 461 462 463 464 465 466 467 468 469 471 472 473 474 475 476 477 478 479 486 487 491 496 497 501 506 510 511 512 513 514 515 516 517 519 521 526 527 531 536 537 541 546 547 551 556 557 560 561 562 563 564 565 566 567 568 569 571 572 573 574 575 576 577 578 579 586 587 591 596 597 600 601 602 603 604 605 606 608 609 610 611 612 613 614 615 616 617 619 620 621 622 623 624 625 626 627 628 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 671 672 673 674 675 676 677 678 679 680 682 683 684 685 686 687 688 689 690 691 693 694 695 696 697 698 699 708 709 711 712 713 714 715 716 717 719 721 722 723 724 725 726 727 728 731 732 733 734 735 736 737 738 739 741 742 743 744 745 746 747 748 749 751 752 753 754 755 756 757 758 759 761 762 763 764 765 766 767 768 769 771 772 773 774 775 776 777 778 779 780 782 783 784 785 786 787 788 789 790 791 793 794 795 796 797 798 799 801 806 807 810 819 826 827 836 837 846 847 856 857 860 862 863 864 865 866 867 868 869 870 872 873 874 875 876 877 878 879 886 887 891 896 897 901 906 907 910 911 912 913 914 915 916 917 918 919 921 931 936 937 941 946 947 951 956 957 960 961 963 964 965 966 967 968 969 970 971 973 974 975 976 977 978 979 981 986 987 991 996 997";
}
